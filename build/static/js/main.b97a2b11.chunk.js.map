{"version":3,"sources":["view/login/login.module.css","store/const/business.js","assets/img/login/login_bg.jpeg","store/const/frameWork.js","store/reducer/frameWork.js","store/reducer/business.js","store/reducer/index.js","store/index.js","store/createAction/frameWork.js","component/frame/frame-work/FrameWork.js","assets/data/menuData.js","router/login/login.js","view/login/Login.js","router/content/home.js","router/content/one.js","router/index.js","utils/storageStateData.js","assets/data/themeConfig.js","App.js","index.js","component/frame/frame-work/frameWork.module.css"],"names":["module","exports","GET_COMMON_DATA_ONE","SET_CURRENT_ONE_MENU_PATH","SET_CURRENT_TWO_MENU_PATH","RESET_FRAMEWORK_STATE","SET_MENU_DATA","defaultState","Map","currentOneMenuPathR","currentTwoMenuPathR","menuDataR","reducer","state","action","type","set","currentOneMenuPath","currentTwoMenuPath","menuData","defaultReducer","commonDataOneR","commonDataOne","allReducer","combineReducers","frameWork","frameWorkReducer","business","businessReducer","storeenhancer","applyMiddleware","thunkMiddleware","store","createStore","setCurrentOneMenuPathA","types","setCurrentTwoMenuPathA","setMenuDataA","Header","Sider","Content","SubMenu","FrameWork","memo","props","route","history","useHistory","dispatch","useDispatch","theme","useContext","ThemeContext","useState","collapsed","setCollapsed","openKeys","setOpenKeys","useSelector","get","shallowEqual","toggle","useCallback","getSelectedPath","twoMenuPath","oneMenuPath","push","exit","localStorage","clear","replace","className","style","height","background","asideBgColor","trigger","collapsible","frameWorkCss","cms_name","mode","color","menuTextColor","length","defaultSelectedKeys","defaultOpenKeys","onOpenChange","keys","map","oneMenu","children","title","name","icon","SmileOutlined","twoMenu","Item","TeamOutlined","onClick","path","HomeOutlined","headBgColor","header","React","createElement","MenuUnfoldOutlined","MenuFoldOutlined","header_right","size","content","padding","mainBgColor","fallback","renderRoutes","routes","loginRouter","exact","component","loginCss","backgroundImage","loginBgImg","default","card","width","labelCol","span","wrapperCol","onFinish","setItem","onFinishFailed","errorInfo","console","log","autoComplete","label","rules","required","message","placeholder","prefix","UserOutlined","Password","LockOutlined","offset","htmlType","block","homeRouter","lazy","oneRouter","render","to","getItem","warning","getDataMergeState","sessionStorage","getState","JSON","parse","themeConfig","require","createContext","App","window","addEventListener","stringify","Provider","value","ReactDOM","document","getElementById"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,uBAAuB,KAAO,sB,iCCD1D,kCAAO,IAAMC,EAAsB,uB,6ECAnC,OAAe,cAA0B,uC,8ICA5BC,EAA4B,4BAC5BC,EAA4B,4BAC5BC,EAAwB,wBACxBC,EAAgB,gBCOvBC,EAAeC,cAAI,CACvBC,oBAAqB,GACrBC,oBAAqB,GACrBC,UAAW,KAkBEC,MAff,WAAgD,IAA/BC,EAA8B,uDAAtBN,EAAcO,EAAQ,uCAC7C,OAAQA,EAAOC,MACb,KAAKV,EACH,OAAOS,EAAOD,MAChB,KAAKV,EACH,OAAOU,EAAMG,IAAI,sBAAuBF,EAAOG,oBACjD,KAAKb,EACH,OAAOS,EAAMG,IAAI,sBAAuBF,EAAOI,oBACjD,KAAKZ,EACH,OAAOO,EAAMG,IAAI,YAAaF,EAAOK,UACvC,QACE,OAAON,I,SCvBPO,EAAiBZ,cAAI,CACzBa,eAAgB,KAYHT,MATf,WAAkD,IAAjCC,EAAgC,uDAAxBO,EAAgBN,EAAQ,uCAC/C,OAAQA,EAAOC,OACRb,IACIW,EAAMG,IAAI,iBAAkBF,EAAOQ,eAEnCT,GCDEU,EALIC,0BAAgB,CACjCC,UAAWC,EACXC,SAAUC,ICENC,EAAgBC,YAAgBC,KAQvBC,EALDC,YAAYrB,EAASiB,G,yGCFtBK,EAAyB,SAACjB,GACrC,MAAO,CACLF,KAAMoB,EACNlB,uBAISmB,EAAyB,SAAClB,GACrC,MAAO,CACLH,KAAMoB,EACNjB,uBAISmB,EAAe,SAAClB,GAC3B,MAAO,CACLJ,KAAMoB,EACNhB,a,8ECLImB,EAAR,IAAQA,OAAQC,EAAhB,IAAgBA,MAAOC,EAAvB,IAAuBA,QAEfC,EAAR,IAAQA,QA+HOC,EA7HGC,gBAAK,SAACC,GACtB,IAAQC,EAAUD,EAAVC,MAEFC,EAAUC,cAEVC,EAAWC,cAEXC,EAAQC,qBAAWC,IAEzB,EAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEA,EAA6DC,aAAY,SAAC7C,GACxE,MAAO,CACLI,mBAAoBJ,EAAM8C,IAAI,aAAaA,IAAI,uBAC/CzC,mBAAoBL,EAAM8C,IAAI,aAAaA,IAAI,uBAC/CxC,SAAUN,EAAM8C,IAAI,aAAaA,IAAI,gBAEtCC,KANK3C,EAAR,EAAQA,mBAAoBC,EAA5B,EAA4BA,mBAAoBC,EAAhD,EAAgDA,SAQ1C0C,EAASC,uBAAY,WACzBP,GAAcD,KACb,CAACA,IAEES,EAAkBD,uBAAY,SAACE,EAAaC,GAChDnB,EAAQoB,KAAKF,GAGbhB,EAASZ,EAAuB4B,IAChChB,EAASd,EAAuB+B,MAC/B,CAACnB,EAASE,IAMPmB,EAAOL,uBAAY,WAEvBM,aAAaC,QACbrB,EAASZ,EAAuB,kBAChCY,EAASd,EAAuB,KAChCc,EAASX,EAAa,KAEtBS,EAAQwB,QAAQ,YACf,CAACtB,EAAUF,IAGd,OACE,qBAAKyB,UAAU,aAAf,SACE,oBAAQC,MAAO,CAAEC,OAAQ,SAAzB,UACE,eAAClC,EAAD,CACEiC,MAAO,CAAEE,WAAYxB,EAAMyB,cAC3BC,QAAS,KACTC,aAAW,EACXvB,UAAWA,EAJb,UAME,qBAAKiB,UAAWO,IAAaC,SAA7B,SAAwCzB,EAAY,GAAK,mBACzD,mBACEJ,MAAM,OACN8B,KAAK,SACLR,MAAO,CAAES,MAAO/B,EAAMgC,eACtB1B,SAA8B,IAApBA,EAAS2B,OAAe,CAAClE,GAAsBuC,EACzD4B,oBAAqB,CAAClE,GAA0C,iBAChEmE,gBAAiB,CAACpE,GAClBqE,aAhCW,SAAAC,GACnB9B,EAAY,CAAC8B,EAAKA,EAAKJ,OAAS,MAwB1B,SAUIhE,GAAYA,EAASqE,KAAI,SAACC,GACxB,OAAKA,EAAQC,UAAwC,IAA5BD,EAAQC,SAASP,OAItC,cAAC1C,EAAD,CAA4BkD,MAAOF,EAAQG,KAAMC,KAAM,cAACC,EAAA,EAAD,IAAvD,SAEIL,EAAQC,SAASF,KAAI,SAACO,GACpB,OACE,kBAAMC,KAAN,CAA8BH,KAAM,cAACI,EAAA,EAAD,IAAkBC,QAAS,WAAQnC,EAAgBgC,EAAQI,KAAMV,EAAQU,OAA7G,SAAuHJ,EAAQH,MAA/GG,EAAQI,UAJlBV,EAAQU,MAHhB,kBAAMH,KAAN,CAA8BH,KAAM,cAACO,EAAA,EAAD,IAAkBF,QAAS,WAAQnC,EAAgB0B,EAAQU,OAA/F,SAAyGV,EAAQG,MAAjGH,EAAQU,cAmB1C,8BACE,eAAC7D,EAAD,CAAQkC,MAAO,CAAEE,WAAYxB,EAAMmD,aAAe9B,UAAWO,IAAawB,OAA1E,UAGIC,IAAMC,cAAclD,EAAYmD,IAAqBC,IAAkB,CACrEnC,UAAW,UACXC,MAAO,CAAES,MAAO,WAChBiB,QAASrC,IAIb,qBAAKU,UAAWO,IAAa6B,aAA7B,SACE,mBAAQT,QAAS,WAAQ/B,KAAUyC,KAAK,QAAQ7F,KAAK,UAArD,2CAIJ,cAACyB,EAAD,CACE+B,UAAWO,IAAa+B,QACxBrC,MAAO,CACLsC,QAAS,GACTpC,WAAYxB,EAAM6D,aAJtB,SAOE,cAAC,WAAD,CAAUC,SAAU,6CAApB,SAEIC,YAAapE,EAAMqE,uB,wEC7GpB/F,I,OAjCE,CACf,CACEyE,KAAM,eACNO,KAAM,iBAER,CACEP,KAAM,MACNO,KAAM,eACNT,SAAU,CACR,CACEE,KAAM,SACNO,KAAM,oBACL,CACDP,KAAM,SACNO,KAAM,sBAIZ,CACEP,KAAM,MACNO,KAAM,eACNT,SAAU,CACR,CACEE,KAAM,SACNO,KAAM,oBACL,CACDP,KAAM,SACNO,KAAM,wBCjBCgB,GARK,CAClB,CACEhB,KAAM,SACNiB,OAAO,EACPC,UCaU1E,gBAAK,WAEjB,IAAMG,EAAUC,cAEVC,EAAWC,cAEXC,EAAQC,qBAAWC,IAezB,OACE,qBAAKmB,UAAU,QAAf,SACE,qBAAKA,UAAW+C,KAAST,QAASrC,MAAO,CAAE+C,gBAAgB,OAAD,OAASrE,EAAMsE,WAAWC,QAA1B,MAA1D,SACE,sBAAKlD,UAAW+C,KAASI,KAAzB,UACE,sDACA,oBACElD,MAAO,CAAEmD,MAAO,QAChB/B,KAAK,QACLgC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,IACpBE,SAvBO,WAEf3D,aAAa4D,QAAQ,QAAS,SAE9BhF,EAASX,EAAalB,KAEtB2B,EAAQwB,QAAQ,aAkBR2D,eAfa,SAACC,GACtBC,QAAQC,IAAI,UAAWF,IAefG,aAAa,MAPf,UASE,kBAAMrC,KAAN,CACEsC,MAAM,WACN1C,KAAK,WACL2C,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,gCAHrC,SAKE,mBAAOC,YAAY,8BAA8BC,OAAQ,cAACC,EAAA,EAAD,CAAcrE,UAAU,4BAGnF,kBAAMyB,KAAN,CACEsC,MAAM,WACN1C,KAAK,WACL2C,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,gCAHrC,SAKE,kBAAOI,SAAP,CAAgBH,YAAY,8BAA8BC,OAAQ,cAACG,EAAA,EAAD,CAAcvE,UAAU,4BAG5F,kBAAMyB,KAAN,CAAW8B,WAAY,CAAEiB,OAAQ,EAAGlB,KAAM,IAA1C,SACE,mBAAQ9G,KAAK,UAAUiI,SAAS,SAASC,OAAK,EAA9C,2CC5DCC,GAPI,CACjB,CACE/C,KAAM,gBACNkB,UALS8B,gBAAK,kBAAM,yDCSTC,GAPG,CAChB,CACEjD,KAAM,mBACNkB,UALQ8B,gBAAK,kBAAM,mCCwDRjC,GA9CH,CACV,CACEf,KAAM,IACNiB,OAAO,EACPiC,OAAQ,WAEN,OAAO,cAAC,IAAD,CAAUC,GAAG,cANd,mBAUPnC,IAVO,CAYV,CACEhB,KAAM,WACNkD,OAAQ,YAAgB,IAAbxG,EAAY,EAAZA,MACT,OAAIuB,aAAamF,QAAQ,SAChB,cAAC1G,EAAMwE,UAAP,CAAiBxE,MAAOA,KAE/B4F,EAAA,EAAQe,QAAQ,4BACT,cAAC,IAAD,CAAUF,GAAG,aAGxBjC,UAAW3E,EACXwE,OAAO,CACL,CACEf,KAAM,WACNiB,OAAO,EACPiC,OAAQ,WAEN,OAAO,cAAC,IAAD,CAAUC,GAAG,qBANpB,mBAUDJ,IAVC,YAWDE,MAIP,CACEjD,KAAM,KACNkD,OAAQ,WACN,OAAO,cAAC,IAAD,CAAUC,GAAG,e,QClCnB,SAASG,KRdoB,IAAC5I,EQe/B6I,eAAeH,QAAQ,oBAEzBvH,EAAMgB,URjB2BnC,EQiBG,6BAAKmB,EAAM2H,WAAWhG,IAAI,cAAiBiG,KAAKC,MAAMH,eAAeH,QAAQ,oBRhB5G,CACLxI,KAAMoB,EACNtB,MAAOL,cAAIK,MQgBX6I,eAAerF,SCtBnB,IAWeyF,GAXK,CAElBtC,WAAYuC,EAAQ,KAEpBpF,aAAc,GAEd0B,YAAa,GAEbU,YAAa,ICOF3D,GAAe4G,0BAsBbC,GApBHtH,gBAAK,WAQf,OFtBAuH,OAAOC,iBAAiB,gBAAgB,WACtC,IAAMtJ,EAAQmB,EAAM2H,WACpBD,eAAe1B,QACb,iBACA4B,KAAKQ,UAAU,CACb3J,oBAAqBI,EAAM8C,IAAI,aAAaA,IAAI,uBAChDjD,oBAAqBG,EAAM8C,IAAI,aAAaA,IAAI,uBAChDhD,UAAWE,EAAM8C,IAAI,aAAaA,IAAI,mBEa5C8F,KAGE,cAACrG,GAAaiH,SAAd,CAAuBC,MAAOR,GAA9B,SACE,cAAC,IAAD,CAAU9H,MAAOA,EAAjB,SACE,cAAC,IAAD,UACGiF,YAAaC,a,OCrBxBqD,IAASlB,OACP,cAAC,GAAD,IACAmB,SAASC,eAAe,U,mBCX1BzK,EAAOC,QAAU,CAAC,SAAW,4BAA4B,OAAS,0BAA0B,QAAU,8B","file":"static/js/main.b97a2b11.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"login_content__1G2BD\",\"card\":\"login_card__25XBM\"};","export const GET_COMMON_DATA_ONE = 'GET_COMMON_DATA_ONE'","export default __webpack_public_path__ + \"static/media/login_bg.494b9bd1.jpeg\";","export const SET_CURRENT_ONE_MENU_PATH = 'SET_CURRENT_ONE_MENU_PATH'\r\nexport const SET_CURRENT_TWO_MENU_PATH = 'SET_CURRENT_TWO_MENU_PATH'\r\nexport const RESET_FRAMEWORK_STATE = 'RESET_FRAMEWORK_STATE'\r\nexport const SET_MENU_DATA = 'SET_MENU_DATA'","import { Map } from 'immutable'\r\n\r\nimport {\r\n  RESET_FRAMEWORK_STATE,\r\n  SET_CURRENT_ONE_MENU_PATH,\r\n  SET_CURRENT_TWO_MENU_PATH,\r\n  SET_MENU_DATA\r\n} from '../const/frameWork.js'\r\n\r\n\r\nconst defaultState = Map({\r\n  currentOneMenuPathR: '',\r\n  currentTwoMenuPathR: '',\r\n  menuDataR: []\r\n})\r\n\r\nfunction reducer(state = defaultState, action) {\r\n  switch (action.type) {\r\n    case RESET_FRAMEWORK_STATE:\r\n      return action.state\r\n    case SET_CURRENT_ONE_MENU_PATH:\r\n      return state.set('currentOneMenuPathR', action.currentOneMenuPath)\r\n    case SET_CURRENT_TWO_MENU_PATH:\r\n      return state.set('currentTwoMenuPathR', action.currentTwoMenuPath)\r\n    case SET_MENU_DATA:\r\n      return state.set('menuDataR', action.menuData)\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer","import { Map } from \"immutable\";\r\n\r\nimport { GET_COMMON_DATA_ONE } from '../const/business'\r\n\r\nconst defaultReducer = Map({\r\n  commonDataOneR: ''\r\n})\r\n\r\nfunction reducer(state = defaultReducer, action) {\r\n  switch (action.type) {\r\n    case GET_COMMON_DATA_ONE:\r\n      return state.set(\"commonDataOneR\", action.commonDataOne)\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer","// 这个函数可以把state对象也转成imutable对象\r\nimport { combineReducers } from 'redux-immutable'\r\n\r\nimport frameWorkReducer from './frameWork'\r\nimport businessReducer from './business'\r\n\r\n// 合并多个reducer 第一次编译combineReducers的时候传入的state是一个空对象\r\nconst allReducer = combineReducers({\r\n  frameWork: frameWorkReducer, // frameWork本质上是一个immutable对象了\r\n  business: businessReducer\r\n})\r\n\r\nexport default allReducer","import {\r\n  createStore,\r\n  applyMiddleware, // applyMiddleware应用中间件\r\n} from 'redux'\r\n\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\nimport reducer from './reducer'\r\n\r\n\r\n// 应用一些中间件 也可以多个中间件进行合并 返回一个enhancer \r\nconst storeenhancer = applyMiddleware(thunkMiddleware)\r\n\r\n// 创建store\r\nconst store = createStore(reducer, storeenhancer)\r\n// thunkMiddleware这个中间件 已经被应用到store里面了 \r\n// dispatch可以派发一个函数了 在这个函数里面可以进行网络请求 然后把返回的数据 放在action里面 然后再次进行dispatch\r\n// 这样网络请求就不是依赖组件了 而是在store中完成了\r\n\r\nexport default store;","import { Map } from 'immutable'\r\n\r\nimport * as types from '../const/frameWork'\r\n\r\n// 重置redux frameWork state数据\r\nexport const resetFrameWorkStateA = (state) => {\r\n  return {\r\n    type: types.RESET_FRAMEWORK_STATE,\r\n    state: Map(state)\r\n  }\r\n}\r\n\r\nexport const setCurrentOneMenuPathA = (currentOneMenuPath) => {\r\n  return {\r\n    type: types.SET_CURRENT_ONE_MENU_PATH,\r\n    currentOneMenuPath\r\n  }\r\n}\r\n\r\nexport const setCurrentTwoMenuPathA = (currentTwoMenuPath) => {\r\n  return {\r\n    type: types.SET_CURRENT_TWO_MENU_PATH,\r\n    currentTwoMenuPath\r\n  }\r\n}\r\n\r\nexport const setMenuDataA = (menuData) => {\r\n  return {\r\n    type: types.SET_MENU_DATA,\r\n    menuData\r\n  }\r\n}\r\n\r\n","import React, { memo, useState, useCallback, useContext, Suspense } from 'react';\r\n\r\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux'\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { renderRoutes } from 'react-router-config'\r\n\r\nimport { ThemeContext } from '@/App';\r\n\r\nimport { setCurrentOneMenuPathA, setCurrentTwoMenuPathA, setMenuDataA } from '@/store/createAction/frameWork.js'\r\n\r\n// 样式\r\nimport frameWorkCss from './frameWork.module.css'\r\nimport './frameWorkResetAntd.css'\r\n\r\nimport { Layout, Menu, Button } from 'antd';\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  HomeOutlined,\r\n  SmileOutlined,\r\n  TeamOutlined\r\n} from '@ant-design/icons';\r\n\r\nconst { Header, Sider, Content } = Layout;\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nconst FrameWork = memo((props) => {\r\n  const { route } = props\r\n\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const theme = useContext(ThemeContext)\r\n\r\n  const [collapsed, setCollapsed] = useState(false)\r\n\r\n  const [openKeys, setOpenKeys] = useState([]);\r\n\r\n  const { currentOneMenuPath, currentTwoMenuPath, menuData } = useSelector((state) => {\r\n    return {\r\n      currentOneMenuPath: state.get('frameWork').get('currentOneMenuPathR'),\r\n      currentTwoMenuPath: state.get('frameWork').get('currentTwoMenuPathR'),\r\n      menuData: state.get('frameWork').get('menuDataR')\r\n    }\r\n  }, shallowEqual)\r\n\r\n  const toggle = useCallback(() => {\r\n    setCollapsed(!collapsed)\r\n  }, [collapsed])\r\n\r\n  const getSelectedPath = useCallback((twoMenuPath, oneMenuPath) => {\r\n    history.push(twoMenuPath)\r\n\r\n    // 派发(把选中的一级菜单 二级菜单path保存到redux中)\r\n    dispatch(setCurrentTwoMenuPathA(twoMenuPath))\r\n    dispatch(setCurrentOneMenuPathA(oneMenuPath))\r\n  }, [history, dispatch])\r\n\r\n  const onOpenChange = keys => {\r\n    setOpenKeys([keys[keys.length - 1]]);\r\n  };\r\n\r\n  const exit = useCallback(() => {\r\n    // 需要清空缓存数据以及重置redux frameWork state数据\r\n    localStorage.clear()\r\n    dispatch(setCurrentTwoMenuPathA('/content/home'))\r\n    dispatch(setCurrentOneMenuPathA(''))\r\n    dispatch(setMenuDataA([]))\r\n\r\n    history.replace('/login')\r\n  }, [dispatch, history])\r\n\r\n\r\n  return (\r\n    <div className='frame_work'>\r\n      <Layout style={{ height: '100vh' }}>\r\n        <Sider\r\n          style={{ background: theme.asideBgColor }}\r\n          trigger={null}\r\n          collapsible\r\n          collapsed={collapsed}\r\n        >\r\n          <div className={frameWorkCss.cms_name}>{collapsed ? '' : 'Betteryourself'}</div>\r\n          <Menu\r\n            theme=\"dark\"\r\n            mode=\"inline\"\r\n            style={{ color: theme.menuTextColor }}\r\n            openKeys={openKeys.length === 0 ? [currentOneMenuPath] : openKeys}\r\n            defaultSelectedKeys={[currentTwoMenuPath ? currentTwoMenuPath : '/content/home']}\r\n            defaultOpenKeys={[currentOneMenuPath]}\r\n            onOpenChange={onOpenChange}\r\n          >\r\n            {\r\n              menuData && menuData.map((oneMenu) => {\r\n                if (!oneMenu.children || oneMenu.children.length === 0) {\r\n                  return (<Menu.Item key={oneMenu.path} icon={<HomeOutlined />} onClick={() => { getSelectedPath(oneMenu.path) }}>{oneMenu.name}</Menu.Item>)\r\n                } else {\r\n                  return (\r\n                    <SubMenu key={oneMenu.path} title={oneMenu.name} icon={<SmileOutlined />}>\r\n                      {\r\n                        oneMenu.children.map((twoMenu) => {\r\n                          return (\r\n                            <Menu.Item key={twoMenu.path} icon={<TeamOutlined />} onClick={() => { getSelectedPath(twoMenu.path, oneMenu.path) }}>{twoMenu.name}</Menu.Item>\r\n                          )\r\n                        })\r\n                      }\r\n                    </SubMenu>\r\n                  )\r\n                }\r\n              })\r\n            }\r\n          </Menu>\r\n        </Sider>\r\n\r\n        <Layout>\r\n          <Header style={{ background: theme.headBgColor }} className={frameWorkCss.header} >\r\n\r\n            {\r\n              React.createElement(collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\r\n                className: 'trigger',\r\n                style: { color: '#ffffff' },\r\n                onClick: toggle,\r\n              })\r\n            }\r\n\r\n            <div className={frameWorkCss.header_right}>\r\n              <Button onClick={() => { exit() }} size=\"small\" type=\"primary\">退出程序</Button>\r\n            </div>\r\n\r\n          </Header>\r\n          <Content\r\n            className={frameWorkCss.content}\r\n            style={{\r\n              padding: 20,\r\n              background: theme.mainBgColor\r\n            }}\r\n          >\r\n            <Suspense fallback={<div>Loading...</div>}>\r\n              {\r\n                renderRoutes(route.routes)\r\n              }\r\n            </Suspense>\r\n          </Content>\r\n        </Layout>\r\n      </Layout>\r\n    </div>\r\n  );\r\n});\r\n\r\n\r\nexport default FrameWork;","const menuData = [\r\n  {\r\n    name: '首页',\r\n    path: '/content/home',\r\n  },\r\n  {\r\n    name: 'one',\r\n    path: '/content/one',\r\n    children: [\r\n      {\r\n        name: 'oneOne',\r\n        path: '/content/one/one',\r\n      }, {\r\n        name: 'oneTwo',\r\n        path: '/content/one/two',\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    name: 'two',\r\n    path: '/content/two',\r\n    children: [\r\n      {\r\n        name: 'twoOne',\r\n        path: '/content/two/one',\r\n      }, {\r\n        name: 'twoTwo',\r\n        path: '/content/two/two',\r\n      }\r\n    ]\r\n  }\r\n]\r\n\r\nexport default menuData","import Login from '@/view/login/Login'\r\n\r\nconst loginRouter = [\r\n  {\r\n    path: \"/login\",\r\n    exact: true,\r\n    component: Login,\r\n  },\r\n]\r\n\r\nexport default loginRouter","import React, { memo, useContext } from 'react';\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { Form, Input, Button, } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\n\r\nimport { setMenuDataA } from '@/store/createAction/frameWork'\r\n\r\nimport { ThemeContext } from '@/App';\r\n\r\nimport loginCss from './login.module.css'\r\nimport './loginResetAntd.css'\r\n\r\n// 模拟导航数据\r\nimport menuData from '@/assets/data/menuData'\r\n\r\nconst Login = memo(() => {\r\n\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const theme = useContext(ThemeContext)\r\n\r\n  const onFinish = () => {\r\n\r\n    localStorage.setItem('token', 'token')\r\n\r\n    dispatch(setMenuDataA(menuData))\r\n\r\n    history.replace('/content')\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <div className={loginCss.content} style={{ backgroundImage: `url(${theme.loginBgImg.default})` }}>\r\n        <div className={loginCss.card}>\r\n          <h1>Hello Betteryourself</h1>\r\n          <Form\r\n            style={{ width: '100%' }}\r\n            name=\"basic\"\r\n            labelCol={{ span: 5 }}\r\n            wrapperCol={{ span: 18 }}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n            autoComplete=\"off\"\r\n          >\r\n            <Form.Item\r\n              label=\"Username\"\r\n              name=\"username\"\r\n              rules={[{ required: true, message: 'Please input your username!' }]}\r\n            >\r\n              <Input placeholder=\"Please input your username!\" prefix={<UserOutlined className=\"site-form-item-icon\" />} />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label=\"Password\"\r\n              name=\"password\"\r\n              rules={[{ required: true, message: 'Please input your password!' }]}\r\n            >\r\n              <Input.Password placeholder=\"Please input your password!\" prefix={<LockOutlined className=\"site-form-item-icon\" />} />\r\n            </Form.Item>\r\n\r\n            <Form.Item wrapperCol={{ offset: 5, span: 18 }}>\r\n              <Button type=\"primary\" htmlType=\"submit\" block>\r\n                登录\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Login;","import { lazy } from 'react';\r\n\r\nconst Home = lazy(() => import('@/view/content/home/Home'))\r\n\r\nconst homeRouter = [\r\n  {\r\n    path: '/content/home',\r\n    component: Home\r\n  }\r\n]\r\n\r\nexport default homeRouter","import { lazy } from 'react';\r\n\r\nconst One = lazy(() => import('@/view/content/one/OneOne'))\r\n\r\nconst oneRouter = [\r\n  {\r\n    path: '/content/one/one',\r\n    component: One\r\n  }\r\n]\r\n\r\nexport default oneRouter","import { Redirect } from 'react-router-dom'\r\n\r\nimport { message } from 'antd'\r\n\r\nimport FrameWork from '@/component/frame/frame-work/FrameWork'\r\n\r\nimport loginRouter from './login/login'\r\n\r\nimport homeRouter from './content/home'\r\nimport oneRouter from './content/one'\r\n\r\n\r\nconst routes = [\r\n  {  //重定向\r\n    path: '/', //一旦匹配到是这个路径 就会执行render函数\r\n    exact: true,\r\n    render: () => {\r\n      //跳转到这个路径\r\n      return <Redirect to=\"/login\" />\r\n    }\r\n  },\r\n\r\n  ...loginRouter,\r\n\r\n  {\r\n    path: '/content',\r\n    render: ({ route }) => {\r\n      if (localStorage.getItem('token')) {\r\n        return <route.component route={route}></route.component>\r\n      } else {\r\n        message.warning('请先登录')\r\n        return <Redirect to=\"/login\" />\r\n      }\r\n    },\r\n    component: FrameWork,\r\n    routes: [\r\n      {  // 重定向\r\n        path: '/content', // 一旦匹配到是这个路径 就会执行render函数\r\n        exact: true,\r\n        render: () => {\r\n          // 跳转到这个路径\r\n          return <Redirect to=\"/content/home\" />\r\n        }\r\n      },\r\n\r\n      ...homeRouter,\r\n      ...oneRouter\r\n    ]\r\n  },\r\n\r\n  {\r\n    path: '**',\r\n    render: () => {\r\n      return <Redirect to=\"/login\" />\r\n    }\r\n  }\r\n]\r\n\r\nexport default routes","import store from '@/store'\r\nimport { resetFrameWorkStateA } from '@/store/createAction/frameWork'\r\n\r\nexport function setStoreData() {\r\n  // 在页面刷新时将redux里的部分信息保存到sessionStorage里\r\n  window.addEventListener(\"beforeunload\", () => {\r\n    const state = store.getState();\r\n    sessionStorage.setItem(\r\n      \"frameWorkState\",\r\n      JSON.stringify({\r\n        currentOneMenuPathR: state.get('frameWork').get('currentOneMenuPathR'),\r\n        currentTwoMenuPathR: state.get('frameWork').get('currentTwoMenuPathR'),\r\n        menuDataR: state.get('frameWork').get('menuDataR'),\r\n      })\r\n    );\r\n  });\r\n}\r\n\r\n//获取缓存数据 合并redux frameWork state数据\r\nexport function getDataMergeState() {\r\n  if (sessionStorage.getItem(\"frameWorkState\")) {\r\n\r\n    store.dispatch(resetFrameWorkStateA({ ...store.getState().get('frameWork'), ...JSON.parse(sessionStorage.getItem(\"frameWorkState\")) }))\r\n\r\n    sessionStorage.clear()\r\n  }\r\n}","\r\n// 比craco.config.js中的自定义主题优先级高\r\nconst themeConfig = {\r\n  // 登录页面背景图\r\n  loginBgImg: require('../img/login/login_bg.jpeg'),\r\n  // 侧边导航栏背景颜色\r\n  asideBgColor: '',\r\n  // head 背景颜色\r\n  headBgColor: '',\r\n  // main背景色\r\n  mainBgColor: '',\r\n}\r\n\r\nexport default themeConfig","import React, { memo, createContext } from 'react';\n\n// 通过Provider把store共享出去\nimport { Provider } from 'react-redux'\nimport store from '@/store'\n\nimport {\n  BrowserRouter,\n} from 'react-router-dom'\n\nimport { renderRoutes } from 'react-router-config'\nimport routes from '@/router/index'\n\nimport { setStoreData, getDataMergeState } from '@/utils/storageStateData'\n\nimport themeConfig from '@/assets/data/themeConfig';\n\nexport const ThemeContext = createContext()\n\nconst App = memo(() => {\n\n  // 监听浏览器刷新 缓存部分redux数据\n  setStoreData()\n\n  // 获取缓存中的数据 并保存到redux中\n  getDataMergeState()\n\n  return (\n    <ThemeContext.Provider value={themeConfig}>\n      <Provider store={store}>\n        <BrowserRouter>\n          {renderRoutes(routes)}\n        </BrowserRouter>\n      </Provider>\n    </ThemeContext.Provider>\n\n  );\n});\n\nexport default App;","// 入口文件\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// 样式初始化\nimport '@/assets/css/index.css'\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cms_name\":\"frameWork_cms_name__pMWnx\",\"header\":\"frameWork_header__1UWFz\",\"content\":\"frameWork_content__5mJex\"};"],"sourceRoot":""}